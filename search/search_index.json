{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MailHog","text":"<p>Inspired by MailCatcher, easier to install.</p> <ul> <li>Download and run MailHog</li> <li>Configure your outgoing SMTP server</li> <li>View your outgoing email in a web UI</li> <li>Release it to a real mail server</li> </ul> <p>Built with Go - MailHog runs without installation on multiple platforms.</p>"},{"location":"#overview","title":"Overview","text":"<p>MailHog is an email testing tool for developers:</p> <ul> <li>Configure your application to use MailHog for SMTP delivery</li> <li>View messages in the web UI, or retrieve them with the JSON API</li> <li>Optionally release messages to real SMTP servers for delivery</li> </ul>"},{"location":"#installation","title":"Installation","text":""},{"location":"#manual-installation","title":"Manual installation","text":"<p>Download the latest release for your platform. Then read the deployment guide for deployment options.</p>"},{"location":"#macos","title":"MacOS","text":"<pre><code>brew update &amp;&amp; brew install mailhog\n</code></pre> <p>Then, start MailHog by running <code>mailhog</code> in the command line.</p>"},{"location":"#debian-ubuntu-go-v118","title":"Debian / Ubuntu Go &lt; v1.18","text":"<pre><code>sudo apt-get -y install golang-go\ngo get github.com/mailhog/MailHog\n</code></pre>"},{"location":"#go-v117-debian-bookworm","title":"Go &gt;= v1.17 (Debian Bookworm)","text":"<pre><code>sudo apt-get -y install golang-go\ngo install github.com/mailhog/MailHog@latest\n</code></pre> <p>Then, start MailHog by running <code>/path/to/MailHog</code> in the command line.</p> <p>E.g. the path to Go's bin files on Ubuntu is <code>~/go/bin/</code>, so to start the MailHog run:</p> <pre><code>~/go/bin/MailHog\n</code></pre>"},{"location":"#freebsd","title":"FreeBSD","text":"<pre><code>pkg install mailhog\nsysrc mailhog_enable=\"YES\"\nservice mailhog start\n</code></pre>"},{"location":"#docker","title":"Docker","text":"<p>Run it from Docker Hub or using the provided Dockerfile</p>"},{"location":"#configuration","title":"Configuration","text":"<p>Check out how to configure MailHog, or use the default settings:   * the SMTP server starts on port 1025   * the HTTP server starts on port 8025   * in-memory message storage</p>"},{"location":"#features","title":"Features","text":"<p>See MailHog libraries for a list of MailHog client libraries.</p> <ul> <li>ESMTP server implementing RFC5321</li> <li>Support for SMTP AUTH (RFC4954) and PIPELINING (RFC2920)</li> <li>Web interface to view messages (plain text, HTML or source)</li> <li>Supports RFC2047 encoded headers</li> <li>Real-time updates using EventSource</li> <li>Release messages to real SMTP servers</li> <li>Chaos Monkey for failure testing</li> <li>See Introduction to Jim for more information</li> <li>HTTP API to list, retrieve and delete messages</li> <li>See APIv1 and APIv2 documentation for more information</li> <li>HTTP basic authentication for MailHog UI and API</li> <li>Multipart MIME support</li> <li>Download individual MIME parts</li> <li>In-memory message storage</li> <li>MongoDB and file based storage for message persistence</li> <li>Lightweight and portable</li> <li>No installation required</li> </ul>"},{"location":"#sendmail","title":"sendmail","text":"<p>mhsendmail is a sendmail replacement for MailHog.</p> <p>It redirects mail to MailHog using SMTP.</p> <p>You can also use <code>MailHog sendmail ...</code> instead of the separate mhsendmail binary.</p> <p>Alternatively, you can use your native <code>sendmail</code> command by providing <code>-S</code>, for example:</p> <pre><code>/usr/sbin/sendmail -S mail:1025\n</code></pre> <p>For example, in PHP you could add either of these lines to <code>php.ini</code>:</p> <pre><code>sendmail_path = /usr/local/bin/mhsendmail\nsendmail_path = /usr/sbin/sendmail -S mail:1025\n</code></pre>"},{"location":"#web-ui","title":"Web UI","text":""},{"location":"#contributing","title":"Contributing","text":"<p>MailHog is a rewritten version of MailHog, which was born out of M3MTA.</p> <p>Clone this repository to <code>$GOPATH/src/github.com/mailhog/MailHog</code> and type <code>make deps</code>.</p> <p>See the Building MailHog guide.</p> <p>Requires Go 1.4+ to build.</p> <p>Run tests using <code>make test</code> or <code>goconvey</code>.</p> <p>If you make any changes, run <code>go fmt ./...</code> before submitting a pull request.</p>"},{"location":"#licence","title":"Licence","text":"<p>Copyright \u00a9\u200e 2014 - 2017, Ian Kent (http://iankent.uk)</p> <p>Released under MIT license, see LICENSE for details.</p>"},{"location":"APIv1/","title":"MailHog API v1","text":"<p>The v1 API is a RESTful HTTP JSON API.</p>"},{"location":"APIv1/#get-apiv1events","title":"GET /api/v1/events","text":"<p>Streams new messages using EventSource and chunked encoding</p>"},{"location":"APIv1/#get-apiv1messages","title":"GET /api/v1/messages","text":"<p>Lists all messages excluding message content</p>"},{"location":"APIv1/#delete-apiv1messages","title":"DELETE /api/v1/messages","text":"<p>Deletes all messages</p> <p>Returns a <code>200</code> response code if message deletion was successful.</p>"},{"location":"APIv1/#get-apiv1messages-message_id","title":"GET /api/v1/messages/{ message_id }","text":"<p>Returns an individual message including message content</p>"},{"location":"APIv1/#delete-apiv1messages-message_id","title":"DELETE /api/v1/messages/{ message_id }","text":"<p>Delete an individual message</p> <p>Returns a <code>200</code> response code if message deletion was successful.</p>"},{"location":"APIv1/#get-apiv1messages-message_id-download","title":"GET /api/v1/messages/{ message_id }/download","text":"<p>Download the complete message</p>"},{"location":"APIv1/#get-apiv1messages-message_id-mimepart-part_index-download","title":"GET /api/v1/messages/{ message_id }/mime/part/{ part_index }/download","text":"<p>Download a MIME part</p>"},{"location":"APIv1/#post-apiv1messages-message_id-release","title":"POST /api/v1/messages/{ message_id }/release","text":"<p>Release the message to an SMTP server</p> <p>Send a JSON body specifying the recipient, SMTP hostname and port number:</p> <pre><code>{\n    \"Host\": \"mail.example.com\",\n    \"Post\": \"25\",\n    \"Email\": \"someone@example.com\"\n}\n</code></pre> <p>Returns a <code>200</code> response code if message delivery was successful.</p>"},{"location":"APIv2/","title":"MailHog API v2","text":"<p>The v2 API is hopefully less of a mess than v1.</p> <p>The specification is written in Swagger 2.0.</p> <p>See the YAML and JSON specifications in the APIv2 directory.</p>"},{"location":"Auth/","title":"Authentication","text":"<p>HTTP basic authentication is supported using a password file.</p> <p>See example-auth for an example (the password is <code>test</code>).</p> <p>Authentication applies to all HTTP requests, including static content and API endpoints.</p>"},{"location":"Auth/#password-file-format","title":"Password file format","text":"<p>The password file format is:</p> <ul> <li>One user per line</li> <li><code>username:password</code></li> <li>Password is bcrypted</li> </ul> <p>By default, a bcrypt difficulty of 4 is used to reduce page load times.</p>"},{"location":"Auth/#generating-a-bcrypted-password","title":"Generating a bcrypted password","text":"<p>You can use a MailHog shortcut to generate a bcrypted password:</p> <pre><code>MailHog bcrypt &lt;password&gt;\n</code></pre>"},{"location":"Auth/#enabling-http-authentication","title":"Enabling HTTP authentication","text":"<p>To enable authentication, pass an <code>-auth-file</code> flag to MailHog:</p> <pre><code>MailHog -auth-file=docs/example-auth\n</code></pre> <p>This also works if you're running MailHog-UI and MailHog-Server separately:</p> <pre><code>MailHog-Server -auth-file=docs/example-auth\nMailHog-UI -auth-file=docs/example-auth\n</code></pre>"},{"location":"Auth/#future-compatibility","title":"Future compatibility","text":"<p>Authentication has been a bit of an experiment.</p> <p>The exact implementation may change over time, e.g. using sessions in the UI and tokens for the API to avoid frequently bcrypting passwords.</p>"},{"location":"BUILD/","title":"Building MailHog","text":"<p>MailHog is built using <code>make</code>, and using this Makefile.</p> <p>If you aren't making any code changes, you can install MailHog using <code>go get github.com/mailhog/MailHog</code>, since mailhog/MailHog-UI/assets/assets.go is already pre-compiled and committed to this repository.</p>"},{"location":"BUILD/#why-do-i-need-a-makefile","title":"Why do I need a Makefile?","text":"<p>MailHog has HTML, CSS and Javascript assets which need to be converted to a go source file using go-bindata.</p> <p>This must happen before running <code>go build</code> or <code>go install</code> to avoid compilation errors (e.g., <code>no buildable Go source files in MailHog-UI/assets</code>).</p>"},{"location":"BUILD/#go-generate","title":"go generate","text":"<p>The build should be updated to use <code>go generate</code> (added in Go 1.4) to preprocess static assets into go source files.</p> <p>However, this will break backwards compatibility with Go 1.2/1.3.</p>"},{"location":"BUILD/#building-a-release","title":"Building a release","text":"<p>Releases are built using gox.</p> <p>Run <code>make release</code> to cross-compile for all available platforms.</p>"},{"location":"CONFIG/","title":"Configuring MailHog","text":"<p>You can configure MailHog using command line options or environment variables:</p> Environment Command line Default Description MH_CORS_ORIGIN -cors-origin If set, an Access-Control-Allow-Origin header is returned for API endpoints MH_HOSTNAME -hostname mailhog.example Hostname to use for EHLO/HELO and message IDs MH_API_BIND_ADDR -api-bind-addr 0.0.0.0:8025 Interface and port for HTTP API server to bind to MH_UI_BIND_ADDR -ui-bind-addr 0.0.0.0:8025 Interface and port for HTTP UI server to bind to MH_MAILDIR_PATH -maildir-path Maildir path (for maildir storage backend) MH_MONGO_COLLECTION -mongo-coll messages MongoDB collection name for message storage MH_MONGO_DB -mongo-db mailhog MongoDB database name for message storage MH_MONGO_URI -mongo-uri 127.0.0.1:27017 MongoDB host and port MH_SMTP_BIND_ADDR -smtp-bind-addr 0.0.0.0:1025 Interface and port for SMTP server to bind to MH_STORAGE -storage memory Set message storage: memory / mongodb / maildir MH_OUTGOING_SMTP -outgoing-smtp JSON file defining outgoing SMTP servers MH_UI_WEB_PATH -ui-web-path WebPath under which the UI is served (without leading or trailing slashes), e.g. 'mailhog' MH_AUTH_FILE -auth-file A username:bcryptpw mapping file"},{"location":"CONFIG/#note-on-http-bind-addresses","title":"Note on HTTP bind addresses","text":"<p>If <code>api-bind-addr</code> and <code>ui-bind-addr</code> are identical, a single listener will be used allowing both to co-exist on one port.</p> <p>The values must match in a string comparison. Resolving to the same host and port combination isn't enough.</p>"},{"location":"CONFIG/#outgoing-smtp-configuration","title":"Outgoing SMTP configuration","text":"<p>Outgoing SMTP servers can be set in web UI when releasing a message, and can be temporarily persisted for later use in the same session.</p> <p>To make outgoing SMTP servers permanently available, create a JSON file with the following structure, and set <code>MH_OUTGOING_SMTP</code> or <code>-outgoing-smtp</code>.</p> <pre><code>{\n    \"server name\": {\n        \"name\": \"server name\",\n        \"host\": \"...\",\n        \"port\": \"587\",\n        \"email\": \"...\",\n        \"username\": \"...\",\n        \"password\": \"...\",\n        \"mechanism\": \"PLAIN\"\n    }\n}\n</code></pre> <p>Only <code>name</code>, <code>host</code> and <code>port</code> are required.</p> <p><code>mechanism</code> can be <code>PLAIN</code> or <code>CRAM-MD5</code>.</p>"},{"location":"CONFIG/#firewalls-and-proxies","title":"Firewalls and proxies","text":"<p>If you have MailHog behind a firewall, you'll need ports <code>8025</code> and <code>1025</code> by default.</p> <p>You can override this using <code>-api-bind-addr</code>, <code>-ui-bind-addr</code> and <code>-smtp-bind-addr</code> configuration options.</p> <p>If you're using MailHog behind a reverse proxy, e.g. nginx, make sure WebSocket connections are also supported and configured - see this issue for information.</p>"},{"location":"DEPLOY/","title":"Deploying MailHog","text":""},{"location":"DEPLOY/#command-line","title":"Command line","text":"<p>You can run MailHog locally from the command line.</p> <pre><code>go get github.com/mailhog/MailHog\nMailHog -h\n</code></pre> <p>To configure MailHog, use the environment variables or command line flags described in the CONFIG.</p>"},{"location":"DEPLOY/#using-supervisordupstartetc","title":"Using supervisord/upstart/etc","text":"<p>MailHog can be started as a daemon using supervisord/upstart/etc.</p> <p>See this example init script and this Ansible role by geerlingguy.</p> <p>If installed with Homebrew on OSX you can have launchd start mailhog now and restart at login:     brew services start mailhog</p>"},{"location":"DEPLOY/#docker","title":"Docker","text":"<p>The example Dockerfile can be used to run MailHog in a Docker container.</p> <p>You can run it directly from Docker Hub (thanks humboldtux)</p> <pre><code>docker run -d -p 1025:1025 -p 8025:8025 mailhog/mailhog\n</code></pre> <p>To mount the Maildir to the local filesystem, you can use a volume:</p> <pre><code>docker run -d -e \"MH_STORAGE=maildir\" -v $PWD/maildir:/maildir -p 1025:1025 -p 8025:8025 mailhog/mailhog\n</code></pre>"},{"location":"DEPLOY/#elastic-beanstalk","title":"Elastic Beanstalk","text":"<p>You can deploy MailHog using AWS Elastic Beanstalk.</p> <ol> <li>Open the Elastic Beanstalk console</li> <li>Create a zip file containing the Dockerfile and MailHog binary</li> <li>Create a new Elastic Beanstalk application</li> <li>Launch a new environment and upload the zip file</li> </ol> <p>Note You'll need to reconfigure nginx in Elastic Beanstalk to expose both ports as TCP, since by default it proxies the first exposed port to port 80 as HTTP.</p> <p>If you're using in-memory storage, you can only use a single instance of MailHog. To use a load balanced EB application, use MongoDB backed storage.</p> <p>To configure your Elastic Beanstalk MailHog instance, either:</p> <ul> <li>Set environment variables using the Elastic Beanstalk console</li> <li>Edit the Dockerfile to pass in command line arguments</li> </ul> <p>You may face restrictions on outbound SMTP from EC2, for example if you are releasing messages to real SMTP servers.</p>"},{"location":"DEPLOY/#saltstack","title":"SaltStack","text":"<p>For deploying MailHog using SaltStack, there's a SaltStack Formula available in github.com/ssc-services/salt-formulas-public.</p>"},{"location":"JIM/","title":"Introduction to Jim","text":"<p>Jim is the MailHog Chaos Monkey, inspired by Netflix.</p> <p>You can invite Jim to the party using the <code>invite-jim</code> flag:</p> <pre><code>MailHog -invite-jim\n</code></pre> <p>With Jim around, things aren't going to work how you expect.</p>"},{"location":"JIM/#what-can-jim-do","title":"What can Jim do?","text":"<ul> <li>Reject connections</li> <li>Rate limit connections</li> <li>Reject authentication</li> <li>Reject senders</li> <li>Reject recipients</li> </ul> <p>It does this randomly, but within defined parameters.</p> <p>You can control these using the following command line flags:</p> Flag Default Description -invite-jim false Set to true to invite Jim -jim-disconnect 0.005 Chance of randomly disconnecting a session -jim-accept 0.99 Chance of accepting an incoming connection -jim-linkspeed-affect 0.1 Chance of applying a rate limit -jim-linkspeed-min 1024 Minimum link speed (in bytes per second) -jim-linkspeed-max 10240 Maximum link speed (in bytes per second) -jim-reject-sender 0.05 Chance of rejecting a MAIL FROM command -jim-reject-recipient 0.05 Chance of rejecting a RCPT TO command -jim-reject-auth 0.05 Chance of rejecting an AUTH command <p>If you enable Jim, you enable all parts. To disable individual parts, set the chance of it happening to 0, e.g. to disable connection rate limiting:</p> <pre><code>MailHog -invite-jim -jim-linkspeed-affect=0\n</code></pre>"},{"location":"JIM/#examples","title":"Examples","text":"<p>Always rate limit to 1 byte per second:</p> <pre><code>MailHog -invite-jim -jim-linkspeed-affect=1 -jim-linkspeed-max=1 -jim-linkspeed-min=1\n</code></pre> <p>Disconnect clients after approximately 5 commands:</p> <pre><code>MailHog -invite-jim -jim-disconnect=0.2\n</code></pre> <p>Simulate a mobile connection (at 10-100kbps) for 10% of clients:</p> <pre><code>MailHog -invite-jim -jim-linkspeed-affect=0.1 -jim-linkspeed-min=1250 -jim-linkspeed-max=12500\n</code></pre>"},{"location":"LIBRARIES/","title":"MailHog libraries","text":"<p>If you've created a MailHog client library, open a pull request and add it!</p> <ul> <li>APIv2 library for NodeJS</li> <li>APIv1/APIv2 library for PHP</li> </ul>"},{"location":"RELEASES/","title":"MailHog Releases","text":""},{"location":"RELEASES/#v100","title":"v1.0.0","text":"<p>There's still outstanding PRs and issues which haven't been addressed in this release.</p> <p>This is to get the updated release out with the latest code, since 0.2.1 is getting very stale!</p> <ul> <li>Bump release to 1.0.0</li> <li>updated mgo dependency</li> <li>temporarily remove vendor directory, because of some build issues</li> <li>Fix #117 - add info about proxies</li> <li>Fix #146 - keep tags on docker hub</li> <li>Fix #148 and mailhog/storage#7 - leading \\r\\n in maildir storage</li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li>mailhog/MailHog-UI#22 and #104 - support TLS websockets in HTTPS mode, thanks @blueimp</li> <li>mailhog/MailHog-UI#23 and mailhog/MailHog-UI#24 - support multiple instances of CID, thanks @kieran and @jerbob92</li> <li>more things I've forgotten/can't find!</li> </ul>"},{"location":"RELEASES/#113-better-support-rfc-support-for-headers","title":"113 - better support RFC support for headers","text":""},{"location":"RELEASES/#118-optimise-dockerfile-for-automated-builds-thanks-blueimp","title":"118 - optimise Dockerfile for automated builds, thanks @blueimp","text":""},{"location":"RELEASES/#122-add-version-flag-thanks-swordbeta","title":"122 - add -version flag, thanks @swordbeta","text":""},{"location":"RELEASES/#123-add-gitignore-thanks-swordbeta","title":"123 - add .gitignore, thanks @swordbeta","text":""},{"location":"RELEASES/#136-update-mailhog-ui-assets-thanks-sdurrheimer","title":"136 - update MailHog-UI assets, thanks @sdurrheimer","text":""},{"location":"RELEASES/#145-fix-a-link-in-deploymd-thanks-nnmer","title":"145 - fix a link in DEPLOY.md, thanks @nnmer","text":""},{"location":"RELEASES/#v021","title":"v0.2.1","text":"<ul> <li>Update .travis.yml to Go 1.6 and tip</li> <li>Fix builds broken by out of date mgo import path</li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li> </li> <li>mailhog/smtp#2 - use file modification time for Created field, thanks @esiqveland</li> </ul>"},{"location":"RELEASES/#82-fix-configuration-documentation-thanks-riking","title":"82 - fix configuration documentation, thanks @riking","text":""},{"location":"RELEASES/#83-add-search-query-parameter-to-swagger-json-thanks-kkrauth","title":"83 - add search query parameter to Swagger JSON, thanks @kkrauth","text":""},{"location":"RELEASES/#86-vendor-all-dependencies","title":"86 - vendor all dependencies","text":""},{"location":"RELEASES/#89-add-missing-iso88591_mapjs-and-sjis_mapjs","title":"89 - add missing iso88591_map.js and sjis_map.js","text":""},{"location":"RELEASES/#90-update-broken-link-in-documentation-thanks-espen","title":"90 - update broken link in documentation, thanks @espen","text":""},{"location":"RELEASES/#91-add-assetsjsfilesize-312minjs","title":"91 - add assets/js/filesize-3.1.2.min.js","text":""},{"location":"RELEASES/#93-starting-mailhog-as-a-service-using-brew-thanks-espen","title":"93 - starting MailHog as a service using brew, thanks @espen","text":""},{"location":"RELEASES/#95-fix-utf-8-encoding-bug-in-attachment-names","title":"95 - fix UTF-8 encoding bug in attachment names","text":""},{"location":"RELEASES/#97-fix-header-case-sensitivity-bug","title":"97 - fix header case sensitivity bug","text":""},{"location":"RELEASES/#102-merge-multiple-prs-adding-websocket-support-thanks-gresau","title":"102 - merge multiple PRs adding WebSocket support, thanks @GREsau","text":""},{"location":"RELEASES/#v020","title":"v0.2.0","text":"<ul> <li>mailhog/storage#1 - fix MongoDB storage bug, and implement search, thanks @HokieTT</li> <li> </li> </ul>"},{"location":"RELEASES/#13-implement-file-based-storage-backend-currently-without-search","title":"13 - implement file based storage backend (currently without search)","text":""},{"location":"RELEASES/#v019","title":"v0.1.9","text":"<ul> <li>mailhog/MailHog-UI#13 - create hyperlinks for URLs in plain text, thanks @GREsau</li> <li>mailhog/MailHog-UI#14 - add no-referrer referrer policy, thanks @djmattyg007</li> </ul>"},{"location":"RELEASES/#76-optimise-docker-image-size-thanks-missedone","title":"76 - optimise docker image size, thanks @missedone","text":""},{"location":"RELEASES/#77-fix-ci-by-removing-go-uuid-thanks-missedone","title":"77 - fix ci by removing go-uuid, thanks @missedone","text":""},{"location":"RELEASES/#80-mailhogmailhog-ui15-mailhogmailhog-server2-add-webpath-thanks-oers","title":"80, mailhog/MailHog-UI#15, mailhog/MailHog-Server#2 - add webpath, thanks @oers","text":""},{"location":"RELEASES/#v018","title":"v0.1.8","text":"<ul> <li>Add <code>MailHog sendmail</code> shortcut to <code>mhsendmail</code></li> <li>Add #40 - HTTP basic authentication</li> <li>Add #63 - message size in UI</li> <li>Fix mailhog/MailHog-UI#10 - fix delete for in-memory storage</li> <li>Merge mailhog/MailHog-UI#8 - fix styles for .content positioning, thanks @thejameskyle</li> <li>Merge mailhog/MailHog-UI#9 - fix content types, thanks @danielwhite</li> <li>Merge mailhog/data#4 - factor out use of log package, thanks @ishbir</li> </ul>"},{"location":"RELEASES/#v017","title":"v0.1.7","text":"<ul> <li>Add mhsendmail sendmail replacement</li> <li>Fix #42 - panic when setting UI bind address</li> <li>Fix #46 - utf8 error in e-mail subject</li> <li>Fix #41 and #50 - underscores replaced with spaces in UI</li> <li>Fix mailhog/MailHog-UI#6 - user defined pagination</li> <li>Merge #43 and #44 - fix documentation, thanks @eirc</li> <li>Merge #48 - fix documentation, thanks @zhubert</li> <li>Merge mailhog/MailHog-Server#1 - avoid duplicate headers, thanks @wienczny</li> </ul>"},{"location":"RELEASES/#v016","title":"v0.1.6","text":"<ul> <li>Fix #24 - base64 attachments/mime part downloads</li> <li>Fix #28 - embed js/css/font assets for offline use</li> <li>Fix #29 - overview of MailHog for readme</li> <li>Fix #34 - message list scrolling</li> <li>Fix #35 - message list sorting</li> <li>Fix #36 - document outgoing SMTP server configuration and APIv2</li> <li>Merge mailhog/MailHog-UI#4 - support base64 content transfer encoding, thanks @stekershaw</li> <li>Merge mailhog/Mailhog-UI#5 - single part encoded text/plain, thanks @naoina</li> </ul>"},{"location":"RELEASES/#v015","title":"v0.1.5","text":"<ul> <li>Fix mailhog/MailHog-UI#3 - squashed subject line</li> </ul>"},{"location":"RELEASES/#v014","title":"v0.1.4","text":"<ul> <li>Merge mailhog/data#2 - MIME boundary fixes, thanks @nvcnvn</li> <li>Merge mailhog/MailHog-UI#2 - UI overhaul, thanks @omegahm</li> <li>Fix #31 - updated this file </li> </ul>"},{"location":"RELEASES/#v013","title":"v0.1.3","text":"<ul> <li>Fix #22 - render non-multipart messages with HTML content type</li> <li>Fix #25 - make web UI resource paths relative</li> </ul>"},{"location":"RELEASES/#v012","title":"v0.1.2","text":"<ul> <li>Hopefully fix #22 - broken rendering of HTML email</li> <li>Partially implement #15 - authentication for SMTP release</li> <li>Load outgoing SMTP servers from file</li> <li>Save outgoing SMTP server when releasing message in UI</li> <li>Select outgoing SMTP server when release message in UI</li> <li>Make Jim (Chaos Monkey) available via APIv2</li> <li>Add Jim overview and on/off switch to web UI</li> </ul>"},{"location":"RELEASES/#v011","title":"v0.1.1","text":"<ul> <li>Fix #23 - switch to iframe to fix CSS bug</li> <li>Update to latest AngularJS</li> <li>Update Dockerfile - thanks @humboldtux</li> <li>Fix SMTP AUTH bug (missing from EHLO)</li> <li>Fix SMTP new line parsing</li> </ul>"},{"location":"RELEASES/#v010","title":"v0.1.0","text":"<ul> <li>Switch to semantic versioning</li> <li>Rewrite web user interface</li> <li>Deprecate APIv1</li> <li>Rewrite messages endpoint for APIv2</li> <li>Add search to APIv2</li> </ul>"},{"location":"RELEASES/#v009","title":"v0.09","text":"<ul> <li>Fix #8 - add Chaos Monkey (Jim) to support failure testing</li> </ul>"},{"location":"RELEASES/#v008","title":"v0.08","text":"<ul> <li>Extract SMTP protocol into isolated library</li> <li>Better protocol tests</li> <li>Add hooks for manipulating protocol behaviour</li> <li>Merge #14 - fix display of multipart messges, thanks @derwassi</li> <li>Merge #17 - fix API v1 docs, thanks @geerlingguy</li> <li>Fix #11 - add build documentation</li> <li>Fix #12 - support broken MAIL/RCPT syntax</li> <li>Fix #16 - add deployment documentation</li> <li>Fix #18 - better server-sent event support using goose</li> </ul>"},{"location":"RELEASES/#v007","title":"v0.07","text":"<ul> <li>Fix #6 - Make SMTP verbs case-insensitive</li> </ul>"},{"location":"RELEASES/#v006","title":"v0.06","text":"<ul> <li>Fix #5 - Support leading tab in multiline headers</li> </ul>"},{"location":"RELEASES/#v005","title":"v0.05","text":"<ul> <li>Add #4 - UI support for RFC2047 encoded headers</li> </ul>"},{"location":"RELEASES/#v004","title":"v0.04","text":"<ul> <li>Configure from environment</li> <li>Include example Dockerfile</li> <li>Fix #1 - mismatched import path and repository name</li> <li>Fix #2 - possible panic with some MIME content</li> <li>Fix #3 - incorrect handling of RSET</li> </ul>"},{"location":"RELEASES/#v003","title":"v0.03","text":"<ul> <li>Download message in .eml format</li> <li>Cleaned up v1 API</li> <li>Web UI and API improvements</li> <li>Fixed UI rendering bugs</li> <li>Message search and matched/total message count</li> <li>Message list resizing and scrolling  </li> <li>EventSource support for message streaming</li> <li>Better error handling and reporting</li> <li>View/download individual MIME parts</li> <li>Release messages to real SMTP servers</li> <li>Switch to go-bindata for asset embedding</li> </ul>"},{"location":"RELEASES/#v002","title":"v0.02","text":"<ul> <li>Better support for ESMTP (RFC5321)</li> <li>Support for SMTP AUTH (RFC4954) and PIPELINING (RFC2920)</li> <li>Improved AJAX web interface to view messages (plain text, HTML or source)</li> <li>Improved HTTP API to list, retrieve and delete messages</li> <li>Multipart MIME support</li> <li>In-memory message storage</li> <li>MongoDB storage for message persistence</li> </ul>"},{"location":"RELEASES/#v001","title":"v0.01","text":"<ul> <li>Basic support for SMTP and HTTP servers</li> <li>Accepts SMTP messages</li> <li>Stores parsed messages in MongoDB</li> <li>Makes messages available via API</li> <li>has Bootstrap/AngularJS UI for viewing/deleting messages</li> </ul>"}]}